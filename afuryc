#!/bin/bash
#   Script by Ypnose  <linuxien[AT]legtux[DOT]org>
#   Inspired by afur-makepkg wrote by Tuxce
#
#   Upload packages on Archlinux.fr private FTP
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#  
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#  
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#   MA 02110-1301, USA.
#  

SOFT="afuryc"
VERS="1.0"
COMPILE=0
CLEAN=0
UPLFTP=0

usage () {
	echo -e "usage:  $SOFT <options>\n"
	echo "  options:"
	echo "    -c        Create packages without upload"
	echo "    -d        Clean existing src/ and pkg/ directories"
	echo "    -e        Edit PKGBUILD"
	echo -e "    -u        Only upload packages to FTP\n"
	echo -e "$SOFT compiles packages and upload them to Archlinux.fr FTP.\n"
}

checkconf () {
	if [[ -r "$HOME/.afuryc.conf" ]]; then
		source $HOME/.afuryc.conf
		echo "$TEXT"
		echo "$MAD"
	fi
	if [[ -r "$HOME/.config/afuryc.conf" ]]; then
		source $HOME/.config/afuryc.conf
		echo "$NEWLOC"
	fi
	if [[ ! -r "$HOME/.afuryc.conf" && ! -r "$HOME/.config/afuryc.conf" ]]; then
		echo -e "Config file not found\nExiting!"
		exit 1
	fi
}

build () {
	makepkg
	makepkg --source
}

cleanbuild () {
	if [[ -d "src" || -d "pkg" ]]; then
	while true; do
		read -p "Do you want to delete src/ & pkg/ folders ? [Y/n] " ask
		case $ask in
			[Yy])
			echo "Deleting existing src/ and pkg/ folder!"
			rm -r src pkg
			break
				;;
			[Nn])
			break
				;;
			*)
			echo "Please answer yes or no!"
				;;
		esac
	done
	else
		echo "Nothing to do!"
	fi
}

edit () {
	if [[ -n "$EDITOR" ]]; then
		if [[ -r "PKGBUILD" ]]; then
			$EDITOR PKGBUILD
		else
			echo "PKGBUILD doesn't exist"
		fi
	else
		echo '$EDITOR is not defined'
	fi
}

upload () {
	echo "The following packages will be uploaded"
	#for pkg in ""
		#do
			#echo
	#done
	echo "Uploading packages..."
}

if [[ "$1" = "-h" || "$1" = "-help" ]]; then
	usage
	exit 1
fi

while getopts ":cdeu" opt; do
	case $opt in 
		c)
		  UPLFTP=0
		   ;;
		d)
		  CLEAN=1
		   ;;
		e)
		  edit
		   ;;
		u)
		  COMPILE=0
		   ;;
		:)
		  echo NEEDARG
		  exit 1
		   ;;
		?)
		  echo "$SOFT: This option is invalid '-$OPTARG'"
		  exit 1
		   ;;
	esac
done

if (( COMPILE )); then
	checkconf
	build
fi

if (( CLEAN )); then
	cleanbuild
fi

if (( UPLFTP )); then
	upload
fi








