#!/bin/sh
#   Script by Ypnose  <linuxien[AT]legtux[DOT]org>
#   Inspired by afur-makepkg wrote by Tuxce
#
#   Upload packages on Archlinux.fr private FTP.
#   This script is POSIX compliant, it should work with every shells.
#   It just needs curl and makepkg, nothing more.
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#  
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#  
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#   MA 02110-1301, USA.
#  

SOFT="afuryc"
VERS="1.0.1"
COMPILE=1
UPLFTP=1
CLEAN=0
LOG=0

usage () {
	printf "usage:  %s <options>\n" "$SOFT"
	printf "%s\n"  "options:"
	printf "%s\n" "    -c        Create packages without upload"
	printf "%s\n" "    -d        Clean existing src/ and pkg/ directories"
	printf "%s\n" "    -e        Edit PKGBUILD"
	printf "%s\n" "    -h        Show help"
	printf "%s\n" "    -r        Edit config file"
	printf "%s\n" "    -u        Only upload packages to FTP"
	printf "%s\n" "    -V        Print version"
	printf "%s compiles packages and upload them to Archlinux.fr FTP.\n\n" "$SOFT"
}

version () {
	printf "%s\n" "        __                       "
	printf "%s\n" "  __ _ / _|_   _ _ __ _   _  ___ "
	printf "%s    %s v. %s\n" " / _  | |_| | | | '__| | | |/ __|" "$SOFT" "$VERS"
	printf "%s    %s\n" "| (_| |  _| |_| | |  | |_| | (__ " "Upload your packages to Archlinux.fr FTP."
	printf "%s    %s\n" " \__,_|_|  \__,_|_|   \__, |\___|" "This program is under GNU General Public License version 2"
	printf "%s\n\n" "                      |___/  "
}

filechk () {
	if [ ! -r "$HOME/.afuryc.conf" ] && [ ! -r "$HOME/.config/afuryc.conf" ]; then
		printf "%s\n%s\n" "Config file not found. You should create a config file." "Exiting"
		exit 1
	fi
}

checkconf () {
	if [ -r "$HOME/.afuryc.conf" ]; then
		. $HOME/.afuryc.conf
	fi
	if [ -r "$HOME/.config/afuryc.conf" ]; then
		. $HOME/.config/afuryc.conf
	fi
	filechk
}

changeconf () {
	if [ -z "$EDITOR" ]; then
		printf "%s\n" '$EDITOR is not defined'
		exit 1
	fi
	filechk
	if [ -r "$HOME/.afuryc.conf" ]; then
		$EDITOR $HOME/.afuryc.conf
	fi
	if [ -r "$HOME/.config/afuryc.conf" ];then
		$EDITOR $HOME/.config/afuryc.conf
	fi
	printf "%s\n" "Configs modified!"
}

build () {
	if [ -n "$PKGDEST" ]; then
		if [ -n "$PACKAGER" ]; then
			PKGDEST=$PKGDEST PACKAGER=$PACKAGER makepkg
			printf "%s\e[0;33m%s\e[0m\n\n" "The package will be stored in " "$PKGDEST"
		else
			PKGDEST=$PKGDEST makepkg
			printf "%s\e[0;33m%s\e[0m\n\n" "The package will be stored in " "$PKGDEST"
		fi
	elif [ -z "$PKGDEST" ]; then
		if [ -n "$PACKAGER" ]; then
			PACKAGER=$PACKAGER makepkg
			printf "%s\e[0;33m%s\e[0m\n\n" "The package will be stored in " "$PWD"
		else
			makepkg
			printf "%s\e[0;33m%s\e[0m\n\n" "The package will be stored in " "$PWD"
		fi
	fi

	#for file in find $PWD -type f -name "*src.tar.gz"
		#do
			#mv file >> 
	#done
}

cleanbuild () {
	if [ -d "src" ] || [ -d "pkg" ]; then
	while true; do
		printf "%s" "Do you want to delete src/ & pkg/ folders? [Y/n] "
		read ask
		case $ask in
			[Yy])
			  printf "\e[0;31m%s\e[0m\n" "Deleting existing src/ and/or pkg/ folder!"
			  rm -r src pkg
			  break
			  ;;
			[Nn])
			  break
			  ;;
			*)
			  printf "%s\n" "Please answer yes or no!"
			  ;;
		esac
	done
	else
		printf "%s\n" "The directories are missing!"
	fi
}

edit () {
	if [ -n "$EDITOR" ]; then
		if [ -r "PKGBUILD" ]; then
			$EDITOR PKGBUILD
			printf "%s\n" "PKGBUILD edit finished."
		else
			printf "%s\n" "PKGBUILD doesn't exist"
		fi
	else
		printf "%s\n" '$EDITOR is not defined'
	fi
}

upload () {
	checkconf
	printf "\n%s\n" "The following packages will be uploaded:"
	for pkg in $(find $PWD -type f -name "*src.tar.gz")
		do
			printf "\e[0;32m%s\e[0m\n" "    $src"
	done
	printf "\n%s\n" "Uploading packages in 5 seconds..."
	sleep 5
	for uppkg in $(find $PWD -type f -name "*src.tar.gz")
		do
			curl -u "$USERF":"$PASSF" -T "$uppkg" "$FTPURL"
	done
}

if [ "$1" = "-help" ]; then
	usage
	exit 0
fi

while getopts ":cdehlrtuV" opt; do
	case $opt in 
		c)
		  UPLFTP=0
		  ;;
		d)
		  CLEAN=1
		  ;;
		e)
		  edit
		  exit 0
		  ;;
		h)
		  usage
		  exit 0
		  ;;
		l)
		  LOG=1
		  ;;
		r)
		  changeconf
		  exit 0
		  ;;
		t)
		  checkconf
		  exit 0
		  ;;
		u)
		  COMPILE=0
		  ;;
		V)
		  version
		  exit 0
		  ;;
		:)
		  printf "NEEDARG\n"
		  exit 1
		  ;;
		?)
		  printf "%s: This option is invalid %s\n" "$SOFT" "-$OPTARG"
		  exit 1
		  ;;
	esac
done

if [ "$((CLEAN))" -ne 0 ]; then
	cleanbuild
fi

if [ "$((COMPILE))" -ne 0 ]; then
	checkconf
	build
fi

if [ "$((UPLFTP))" -ne 0 ]; then
	upload
fi

exit 0





